<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="/jekyll-boilerplate/feed.xml" rel="self" type="application/atom+xml" /><link href="/jekyll-boilerplate/" rel="alternate" type="text/html" /><updated>2017-09-16T11:59:18+00:00</updated><id>/jekyll-boilerplate/</id><title type="html">Jekyll Boilerplate</title><subtitle></subtitle><entry><title type="html">How To Fork</title><link href="/jekyll-boilerplate/blog/2017/09/02/how-to-fork/" rel="alternate" type="text/html" title="How To Fork" /><published>2017-09-02T12:31:11+00:00</published><updated>2017-09-16T11:51:15+00:00</updated><id>/jekyll-boilerplate/blog/2017/09/02/how-to-fork</id><content type="html" xml:base="/jekyll-boilerplate/blog/2017/09/02/how-to-fork/">&lt;p&gt;&lt;a href=&quot;/jekyll-boilerplate/uml/9ceb20472f854617547233dcc2fb9c27.svg&quot; data-toggle=&quot;lightbox&quot;&gt;&lt;img src=&quot;/jekyll-boilerplate/uml/9ceb20472f854617547233dcc2fb9c27.svg&quot; alt=&quot;PlantUML SVG diagram&quot; class=&quot;plantuml img-fluid&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;h2 id=&quot;externe-systeme&quot;&gt;Externe Systeme&lt;/h2&gt;
        &lt;p&gt;Der Build Prozess und die Interaktion mit den externen Systemen wird über die  &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; konfiguriert.&lt;/p&gt;
        &lt;p&gt;Secrets (z.B. Github Token) sollten mit Hilfe von &lt;a href=&quot;https://docs.travis-ci.com/user/encryption-keys/&quot;&gt;Travis-ci&lt;/a&gt; verschlüsselt sein!.&lt;/p&gt;
        &lt;p&gt;Nicht benötigte Systeme sollten aus dem Travis build entfernt werden, dies verkürzt die Build dauer.&lt;/p&gt;
        &lt;h3 id=&quot;deploy-heroku&quot;&gt;Deploy heroku&lt;/h3&gt;
        &lt;p&gt;Auf heroku kann mit den &lt;a href=&quot;https://docs.travis-ci.com/user/deployment/heroku/&quot;&gt;Travis Deployment Provier&lt;/a&gt; ausgerollt werden.&lt;/p&gt;
        &lt;p&gt;Das depoyment kann unter &lt;code class=&quot;highlighter-rouge&quot;&gt;- HEROKU_APP_NAME=noltarium-blog-test&lt;/code&gt; auf dass gewünschte &lt;a href=&quot;https://heroku.com/&quot;&gt;Heroku&lt;/a&gt; Ziel geändert werden.&lt;/p&gt;
        &lt;h4 id=&quot;files&quot;&gt;Files&lt;/h4&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
        ├── ci_scripts
        │   ├── prepare_generated_files_branch.sh
        │   ├── prepare_heroku_deployment.sh
        │   └── prepare_system_dependency.sh
        ├── heroku_app
        │   ├── composer.json
        │   ├── index.php
        │   └── Procfile
        ...
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;h3 id=&quot;deploy-gh-pages&quot;&gt;Deploy gh-pages&lt;/h3&gt;
        &lt;p&gt;Für das Github Page Deployment wird ein &lt;a href=&quot;https://github.com/blog/1509-personal-api-tokens&quot;&gt;Github Api Token&lt;/a&gt; benötigt.
        Der token wird im &lt;a href=&quot;https://github.com/nolte/jekyll-boilerplate/blob/master/ci_scripts/deploy_ghpage.sh&quot;&gt;Deployment Script&lt;/a&gt; verwendet, und muss für die Travis Stage &lt;code class=&quot;highlighter-rouge&quot;&gt;- stage: deploy as gh-page&lt;/code&gt; verfügbar sein.&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;travis encrypt GITHUB_TOKEN=&quot;Github Api Token&quot; --add
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;h4 id=&quot;files-1&quot;&gt;Files&lt;/h4&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
        ├── ci_scripts
        │   ├── deploy_ghpage.sh
        │   ├── prepare_generated_files_branch.sh
        │   └── prepare_system_dependency.sh
        ...
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;h3 id=&quot;deploy-docker-presentation&quot;&gt;Deploy Docker Presentation&lt;/h3&gt;
        &lt;p&gt;Konfiguriere den &lt;a href=&quot;https://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt; Account, für das &lt;a href=&quot;https://github.com/nolte/jekyll-boilerplate/blob/master/ci_scripts/deploy_to_dockerhub.sh&quot;&gt;Deployment Script&lt;/a&gt;&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;travis encrypt DOCKER_USERNAME=&quot;Github Api Token&quot;
        travis encrypt DOCKER_PASSWORD=&quot;Github Api Token&quot;
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;h4 id=&quot;files-2&quot;&gt;Files&lt;/h4&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
        ├── ci_scripts
        │   ├── deploy_to_dockerhub.sh
        │   ├── prepare_docker_nginx_deployment.sh
        │   ├── prepare_generated_files_branch.sh
        │   └── prepare_system_dependency.sh
        ├── docker_nginx
        │   └── Dockerfile
        ...
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;h3 id=&quot;notify-to-slack&quot;&gt;Notify to Slack&lt;/h3&gt;
        &lt;p&gt;Für Benachrichtiegungen über builds kann &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/#Configuring-slack-notifications&quot;&gt;Slack&lt;/a&gt; konfiguriert werden. Dafür muss man nur die &lt;a href=&quot;https://slack.com/apps/A0F81FP4N-travis-ci#panel_more_info&quot;&gt;Slack Travisci App&lt;/a&gt; dem eigenen channel hinzugefügen.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Build Process</title><link href="/jekyll-boilerplate/blog/2017/09/02/build-process/" rel="alternate" type="text/html" title="Build Process" /><published>2017-09-02T12:31:11+00:00</published><updated>2017-09-15T22:00:17+00:00</updated><id>/jekyll-boilerplate/blog/2017/09/02/build-process</id><content type="html" xml:base="/jekyll-boilerplate/blog/2017/09/02/build-process/">&lt;h2 id=&quot;commit-ablauf&quot;&gt;Commit Ablauf&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;/jekyll-boilerplate/uml/aee04b6bb4302c85992aa6e34c7e9a74.svg&quot; data-toggle=&quot;lightbox&quot;&gt;&lt;img src=&quot;/jekyll-boilerplate/uml/aee04b6bb4302c85992aa6e34c7e9a74.svg&quot; alt=&quot;PlantUML SVG diagram&quot; class=&quot;plantuml img-fluid&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p&gt;Jeder build wird als Heroku App deployt, dieses dient als “DevStage”.  &lt;br /&gt;
        Nur der Master wird als &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; im branch &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; publiziert.&lt;br /&gt;
        Diese Trennung wurde durch die Nutzung von &lt;a href=&quot;https://docs.travis-ci.com/user/build-stages/&quot;&gt;Travis-ci Built Stages&lt;/a&gt; erreicht.  &lt;br /&gt;
        siehe: &lt;a href=&quot;https://travis-ci.org/nolte/jekyll-boilerplate&quot;&gt;&lt;img src=&quot;https://travis-ci.org/nolte/jekyll-boilerplate.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h2 id=&quot;heroku-container&quot;&gt;Heroku Container&lt;/h2&gt;
        &lt;p&gt;Da sich der Blog nicht auf heroku Bauen lässt, durch die Plantuml &amp;amp; Ditaa Abhängigkeiten, werden nur die generierten Dateien nach Heroku übertragen.
        Der Blog läuft dann als &lt;a href=&quot;https://devcenter.heroku.com/articles/php-support&quot;&gt;Heroku PHP App&lt;/a&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;blog-release&quot;&gt;Blog Release&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;/jekyll-boilerplate/uml/fdd09c7ce5f126f897fb6d557125a510.svg&quot; data-toggle=&quot;lightbox&quot;&gt;&lt;img src=&quot;/jekyll-boilerplate/uml/fdd09c7ce5f126f897fb6d557125a510.svg&quot; alt=&quot;PlantUML SVG diagram&quot; class=&quot;plantuml img-fluid&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;p&gt;Der aktuell aktive &lt;strong&gt;Feature Branch&lt;/strong&gt; ist als &lt;a href=&quot;https://noltarium-blog-test.herokuapp.com/&quot;&gt;Heroku App&lt;/a&gt; einsehbar. &lt;br /&gt;
        Die generierte Blog Version vom &lt;strong&gt;Master Branche&lt;/strong&gt; ist unter &lt;a href=&quot;https://nolte.github.io/jekyll-boilerplate&quot;&gt;github.io&lt;/a&gt; zu finden.&lt;/p&gt;
        &lt;p&gt;Sollte man den generierten Blog lokal starten wollen kann ein &lt;a href=&quot;https://hub.docker.com/r/nolte/jekyll-boilerplate&quot;&gt;Nginx Container&lt;/a&gt; verwendet werden.&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  docker run -p 8080:80 nolte/jekyll-boilerplate
        &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;</content><author><name></name></author><summary type="html">Commit Ablauf</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll-boilerplate/blog/2016/09/26/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-09-26T12:31:11+00:00</published><updated>2017-09-16T11:51:15+00:00</updated><id>/jekyll-boilerplate/blog/2016/09/26/welcome-to-jekyll</id><content type="html" xml:base="/jekyll-boilerplate/blog/2016/09/26/welcome-to-jekyll/">&lt;p&gt;Ein neues “Kopier” Projekt für jekyll Blogs. :+1: &lt;br /&gt;
        zusätzlich zu dem Klassischen Bootstrap Layout wird eine &lt;a href=&quot;https://github.com/hakimel/reveal.js&quot;&gt;reveal.js&lt;/a&gt; Modus angeboten.
        &lt;a href=&quot;https://github.com/hakimel/reveal.js&quot;&gt;Reveal.js&lt;/a&gt; wird verwendet um einfache und &lt;strong&gt;moderne&lt;/strong&gt; Präsentationen zu erstellen.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;h2 id=&quot;addons&quot;&gt;Addons&lt;/h2&gt;
        &lt;table class=&quot;table table-striped&quot;&gt;
        &lt;thead&gt;
        &lt;tr&gt;
        &lt;th&gt;Plugin&lt;/th&gt;
        &lt;th&gt;Description&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/disqus/&quot;&gt;disqus&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;Eine einfache möglichkeit, Nutzern eine Kommentar Funktion anzubieten.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/ditaa/&quot;&gt;ditaa&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;&lt;a href=&quot;http://ditaa.sourceforge.net/&quot;&gt;Ditaa&lt;/a&gt; ist eine nette Möglichkeit einfach Diagramme als markdown zu speichern. &lt;br /&gt;
        Durch &lt;a href=&quot;http://asciiflow.com/&quot;&gt;asciiflow.com&lt;/a&gt; lassen sich die Diagramme recht einfach erstellen.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/javascript/&quot;&gt;Java Script Stuff&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;&lt;strong&gt;JavaScripts Addons&lt;/strong&gt;&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://ashleydw.github.io/lightbox/&quot;&gt;lightbox&lt;/a&gt; (js lib für Image Resizeing)&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://afeld.github.io/bootstrap-toc/&quot;&gt;bootstrap-toc&lt;/a&gt; Table of Content lib&lt;/li&gt;
        &lt;/ul&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/jekyll-archives/&quot;&gt;jekyll-archives&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;Generiert die Blog Posts in eine Archive Struktur.&lt;/p&gt;
        &lt;p&gt;Es wurde ein kleiner Teil des Original Plugins überschrieben, um eine breadcrumb zu ermöglichen. &lt;br /&gt;
        siehe: &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins/jekyll-archives/archive.rb&lt;/code&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/jekyll-categories/&quot;&gt;jekyll-categories&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;Generiere Kategorie Seiten auf basis der Blogeinträge.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/jekyll-sitemap/&quot;&gt;jekyll-sitemap&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;&lt;a href=&quot;https://www.sitemaps.org/index.html&quot;&gt;Sitemaps.org&lt;/a&gt; konformes Update Log generieren siehe (&lt;a href=&quot;https://nolte.github.io/jekyll-boilerplate/sitemap.xml&quot;&gt;./sitemap.xml&lt;/a&gt;).&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/jekyll-tidy/&quot;&gt;jekyll-tidy&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;Formatiert den generierten Html output&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/jemoji/&quot;&gt;jemoji&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;Netter Spielkram und den Blog Bunter zu gestalten :neckbeard:, Mögliche &lt;a href=&quot;https://www.webpagefx.com/tools/emoji-cheat-sheet/&quot;&gt;emoji&lt;/a&gt;.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;a href=&quot;/jekyll-boilerplate/jekyll/plantuml/&quot;&gt;Plantuml&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;p&gt;&lt;a href=&quot;http://plantuml.com/&quot;&gt;Plantuml&lt;/a&gt; dient zum generieren von UML Diagram&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;h2 id=&quot;presentation-struktur&quot;&gt;Presentation Struktur&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;/jekyll-boilerplate/uml/7970b98157580791cd0945848db0fc9f.svg&quot; data-toggle=&quot;lightbox&quot;&gt;&lt;img src=&quot;/jekyll-boilerplate/uml/7970b98157580791cd0945848db0fc9f.svg&quot; alt=&quot;PlantUML SVG diagram&quot; class=&quot;plantuml img-fluid&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Ein neues “Kopier” Projekt für jekyll Blogs. :+1: zusätzlich zu dem Klassischen Bootstrap Layout wird eine reveal.js Modus angeboten. Reveal.js wird verwendet um einfache und moderne Präsentationen zu erstellen.</summary></entry></feed>